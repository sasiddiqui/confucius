{
	"documents" : [{
		"id" : 1,
		"body" :[{
			"question": "What is a NullPointer exception, and how do you fix it?",
			"answers":[{
				"ans1": "NullPointerExceptions are exceptions that occur when you try to use a reference that points to no location in memory (null) as though it were referencing an object. Calling a method on a null reference or trying to access a field of a null reference will trigger a NullPointerException. These are the most common, but other ways are listed on the NullPointerException javadoc page.",
				"ans2": "A null pointer exception is caused when you dereference a variable that is pointing to null"
				}]
			}]
		},
		{
		"id" : 2,
		"body" :[{
			"question": "RegEx match open tags except self contained xhtml tags",
			"answers":[{
				"ans1": "You can't parse [X]HTML with regex. Because HTML can't be parsed by regex. Regex is not a tool that can be used to correctly parse HTML. As I have answered in HTML-and-regex questions here so many times before, the use of regex will not allow you to consume HTML. Regular expressions are a tool that is insufficiently sophisticated to understand the constructs employed by HTML. HTML is not a regular language and hence cannot be parsed by regular expressions. Regex queries are not equipped to break down HTML into its meaningful parts. so many times but it is not getting to me. Even enhanced irregular regular expressions as used by Perl are not up to the task of parsing HTML. You will never make me crack. HTML is a language of sufficient complexity that it cannot be parsed by regular expressions. Even Jon Skeet cannot parse HTML using regular expressions. Every time you attempt to parse HTML with regular expressions, the unholy child weeps the blood of virgins, and Russian hackers pwn your webapp. Parsing HTML with regex summons tainted souls into the realm of the living. HTML and regex go together like love, marriage, and ritual infanticide. The <center> cannot hold it is too late. The force of regex and HTML together in the same conceptual space will destroy your mind like so much watery putty. If you parse HTML with regex you are giving in to Them and their blasphemous ways which doom us all to inhuman toil for the One whose Name cannot be expressed in the Basic Multilingual Plane, he comes. HTML-plus-regexp will liquify the nâ€‹erves of the sentient whilst you observe, your psyche withering in the onslaught of horror.",
				"ans2": "While it is true that asking regexes to parse arbitrary HTML is like asking Paris Hilton to write an operating system, it's sometimes appropriate to parse a limited, known set of HTML.

If you have a small set of HTML pages that you want to scrape data from and then stuff into a database, regexes might work fine. For example, I recently wanted to get the names, parties, and districts of Australian federal Representatives, which I got off of the Parliament's web site. This was a limited, one-time job.

Regexes worked just fine for me, and were very fast to set up.
"
				}]
			}]
		},
		{
		"id" : 3,
		"body" :[{
			"question": "Can I create a new operator in C++ and how?",
			"answers":[{
				"ans1": "No, you can't overload op.*:",
				"ans2": "You cannot overload .* (see Lightness' answer for standard text), but, interestingly enough, you can overload ->* (similar to how you can overload -> but not .)."
				}]
			}]
		},
		{
		"id" : 4,
		"body" :[{
			"question": "Howto Reverse-Engineer a REST-Webservice",
			"answers":[{
				"ans1": "If you have an existing client using the service (a web page, mobile app, etc.) you can use a proxy to record and observe traffic that's sent/received by an existing client using the service. Fiddler or Charles will get the job done."
				}]
			}]
		},
		{
		"id" : 5,
		"body" :[{
			"question": "Is an array's name a pointer in C? If not, what is the difference between an array's name and a pointer variable?",
			"answers":[{
				"ans1": "An array is an array and a pointer is a pointer, but in most cases array names are converted to pointers. A term often used is that they decay to pointers.",
				"ans2": "When an array is used as a value, its name represents the address of the first element.
When an array is not used as a value its name represents the whole array."
				}]
			}]
		}
	]
}
